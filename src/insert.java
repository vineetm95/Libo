
import java.io.*;
import java.awt.*;
import java.sql.*;
import java.net.*;
import javax.swing.*;
import java.nio.file.*;
import java.util.logging.*;
import javax.imageio.ImageIO;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import com.mysql.jdbc.Statement;
import com.mysql.jdbc.Connection;
import java.awt.image.BufferedImage;
import com.google.api.services.books.Books;
import com.google.api.client.json.JsonFactory;
import com.google.api.services.books.model.Volume;
import com.google.api.services.books.model.Volumes;
import com.google.api.services.books.Books.Volumes.List;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.services.books.BooksRequestInitializer;
import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;

class cFileFilter extends javax.swing.filechooser.FileFilter{
    public boolean accept(File f){
        return f.isDirectory() ||
                f.getName().toLowerCase().endsWith(".jpg") ||
                f.getName().toLowerCase().endsWith(".gif") ||
                f.getName().toLowerCase().endsWith(".png") ||
                f.getName().toLowerCase().endsWith(".bmp");
    }
    public String getDescription(){
        return "Image files";
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Vineet
 */
public class insert extends javax.swing.JFrame {
    /**
     * Creates new form insert
     */
    public insert() {
        try{
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/Library", "root", "");
            Statement stmt = (Statement) con.createStatement();
            String query= "Select Book_ID from Books";
            ResultSet rs=stmt.executeQuery(query);
            while(rs.next())
                bookid=1+Integer.parseInt(rs.getString("Book_ID"));
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Unable to fetch new Book_ID", null, 0);
        }
        initComponents();
        cFileFilter filter  = new cFileFilter();
        jfc.addChoosableFileFilter(filter);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FrameFC = new javax.swing.JFrame();
        jfc = new javax.swing.JFileChooser();
        jToolBar4 = new javax.swing.JToolBar();
        BtnHome3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TxtAuthor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtISBN = new javax.swing.JTextField();
        TxtBID = new javax.swing.JTextField();
        TxtBName = new javax.swing.JTextField();
        TxtBtype = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        TxtPublisher = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TxtCopies = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cimg = new javax.swing.JLabel();
        TxtCURL = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BtnUrlChooser = new javax.swing.JButton();
        ButtonFetch = new javax.swing.JButton();
        BtnAdd = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        NewMBtnExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        FrameFC.setMinimumSize(new java.awt.Dimension(602, 361));
        FrameFC.setResizable(false);

        jfc.setAcceptAllFileFilterUsed(false);
        jfc.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jfc.setMaximumSize(new java.awt.Dimension(582, 297));
        jfc.setMinimumSize(new java.awt.Dimension(582, 297));
        jfc.setPreferredSize(new java.awt.Dimension(582, 297));
        jfc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jfcMouseEntered(evt);
            }
        });
        jfc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FrameFCLayout = new javax.swing.GroupLayout(FrameFC.getContentPane());
        FrameFC.getContentPane().setLayout(FrameFCLayout);
        FrameFCLayout.setHorizontalGroup(
            FrameFCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FrameFCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jfc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FrameFCLayout.setVerticalGroup(
            FrameFCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameFCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jfc, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar4.setRollover(true);

        BtnHome3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/home.png"))); // NOI18N
        BtnHome3.setFocusable(false);
        BtnHome3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnHome3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/image/homero.png"))); // NOI18N
        BtnHome3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnHome3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHome3ActionPerformed(evt);
            }
        });
        jToolBar4.add(BtnHome3);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/addnew.png"))); // NOI18N
        jLabel2.setText("Enter Book Details");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setText("Type:");

        jLabel1.setText("Book ID:");

        jLabel6.setText("Author Name:");

        TxtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtAuthorActionPerformed(evt);
            }
        });

        jLabel3.setText("ISBN:");

        TxtISBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtISBNActionPerformed(evt);
            }
        });

        TxtBID.setText(""+bookid);

        TxtBName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtBNameActionPerformed(evt);
            }
        });

        TxtBtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Other", "Course Book", "Encyclopedia", "Magazine", "Novel", "Poetry", "Reference Book" }));

        jLabel4.setText("Book Name:");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        TxtPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtPublisherActionPerformed(evt);
            }
        });

        jLabel7.setText("Publisher:");

        TxtCopies.setText("1");
        TxtCopies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtCopiesActionPerformed(evt);
            }
        });

        jLabel8.setText("Copies:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cover Photo"));

        cimg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cimg, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cimg, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addContainerGap())
        );

        TxtCURL.setMaximumSize(new java.awt.Dimension(6, 20));
        TxtCURL.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                TxtCURLCaretUpdate(evt);
            }
        });
        TxtCURL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtCURLActionPerformed(evt);
            }
        });

        jLabel9.setText("Cover Photo URL:");

        BtnUrlChooser.setText("Choose");
        BtnUrlChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUrlChooserActionPerformed(evt);
            }
        });

        ButtonFetch.setText("Fetch");
        ButtonFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonFetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtBtype, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TxtBName, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TxtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(TxtCURL, javax.swing.GroupLayout.DEFAULT_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnUrlChooser))
                            .addComponent(TxtCopies, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(TxtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonFetch))
                            .addComponent(TxtBID, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addContainerGap(505, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TxtBID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(ButtonFetch))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtBtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtCopies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtCURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(BtnUrlChooser)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(jLabel1)
                    .addContainerGap(205, Short.MAX_VALUE)))
        );

        BtnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/plus.png"))); // NOI18N
        BtnAdd.setText("Add");
        BtnAdd.setIconTextGap(12);
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        NewMBtnExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        NewMBtnExit.setText("Exit");
        NewMBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewMBtnExitActionPerformed(evt);
            }
        });
        jMenu1.add(NewMBtnExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Status");

        jMenuItem1.setText("Total Books");
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Currently Available");
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Total Fine Earned");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(73, 73, 73))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BtnAdd)
                                .addGap(241, 241, 241))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewMBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewMBtnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_NewMBtnExitActionPerformed

    private void BtnHome3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHome3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnHome3ActionPerformed

    private void TxtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtAuthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtAuthorActionPerformed

    private void TxtISBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtISBNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtISBNActionPerformed

    private void TxtBNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtBNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBNameActionPerformed

    private void TxtPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtPublisherActionPerformed

    private void TxtCopiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtCopiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtCopiesActionPerformed

    private void TxtCURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtCURLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtCURLActionPerformed

    private void BtnUrlChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUrlChooserActionPerformed
        FrameFC.setVisible(true);
    }//GEN-LAST:event_BtnUrlChooserActionPerformed

    private void TxtCURLCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_TxtCURLCaretUpdate
        Image img = Toolkit.getDefaultToolkit().createImage("E:\\temp\\"+TxtCURL.getText()+".jpg").getScaledInstance(192, 235, 0);
        ImageIcon ic = new ImageIcon(img);
        cimg.setIcon(ic);
    }//GEN-LAST:event_TxtCURLCaretUpdate

    private void jfcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfcActionPerformed
        String ac = evt.getActionCommand();
        if (ac.equals("ApproveSelection")) {
            if (jfc.getSelectedFile().getName().endsWith(".jpg") || jfc.getSelectedFile().getName().endsWith(".gif") || jfc.getSelectedFile().getName().endsWith(".png") || jfc.getSelectedFile().getName().endsWith(".bmp"))
            {
                Path FROM = Paths.get(jfc.getSelectedFile().getAbsolutePath());
                Path TO = Paths.get("E:\\temp\\"+jfc.getSelectedFile().getName().substring(0, jfc.getSelectedFile().getName().length()-4)+".jpg");
                CopyOption[] options = new CopyOption[]{
                    StandardCopyOption.REPLACE_EXISTING,
                    StandardCopyOption.COPY_ATTRIBUTES
                }; 
                try {
                    Files.copy(FROM, TO, options);
                } catch (IOException ex) {
                    Logger.getLogger(update.class.getName()).log(Level.SEVERE, null, ex);
                }

                TxtCURL.setText(jfc.getSelectedFile().getName().substring(0, jfc.getSelectedFile().getName().length()-4));
                FrameFC.setVisible(false);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "You Selected invalid file!!!");
            }
        }
        else if (ac.equals("CancelSelection")) {
            FrameFC.setVisible(false);
        }        
            }//GEN-LAST:event_jfcActionPerformed

    private void jfcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jfcMouseEntered
        
    }//GEN-LAST:event_jfcMouseEntered
BufferedImage newImage;
    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        String BID, ISBN, Bname, type, author, pub, copies, cpurl;
        BID = TxtBID.getText();
        ISBN = TxtISBN.getText();
        Bname = TxtBName.getText();
        type = (String) TxtBtype.getSelectedItem();
        author = TxtAuthor.getText();
        pub = TxtPublisher.getText();
        copies = TxtCopies.getText();
        cpurl = TxtCURL.getText();
        int bid, bcopies;
        bid = Integer.parseInt(BID);
        bcopies = Integer.parseInt(copies);
        try
            {
                Class.forName("java.sql.DriverManager");
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/Library", "root", "");
                Statement stmt = (Statement) con.createStatement();
                String query= "INSERT INTO Books VALUES('"+bid+"','"+ISBN+"','"+Bname+"','"+type+"','"+author+"','"+pub+"','"+bcopies+"','"+bcopies+"','"+cpurl+"','');";
                System.out.println(query);
                stmt.executeUpdate(query);
                JOptionPane.showMessageDialog(this,"Book Added Successfully!!!");
                File outputfile = new File("E:\\temp\\"+gbid+".jpg");
                ImageIO.write(newImage, "jpg", outputfile);
                this.dispose();
                new insert().setVisible(true);
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        
    }//GEN-LAST:event_BtnAddActionPerformed
    static String Title,ISBN, type, pub, copies, cpurl,gbid;
    static java.util.List<String> fauthor;

    static List types[];
    public static Path download(String sourceUrl,
            String targetDirectory) throws MalformedURLException, IOException
    {
        URL url = new URL(sourceUrl);

        String fileName = url.getFile();

        Path targetPath = new File(targetDirectory + fileName).toPath();

        Files.copy(url.openStream(), targetPath,
                StandardCopyOption.REPLACE_EXISTING);

        return targetPath;
    }
    private void ButtonFetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonFetchActionPerformed
        JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();
        String args[]={"--isbn",TxtISBN.getText()};
        try {
            if (args.length == 0) {
        System.err.println("Usage: BooksSample [--author|--isbn|--title] \"<query>\"");
        System.exit(1);
      }
      // Parse command line parameters into a query.
      // Query format: "[<author|isbn|intitle>:]<query>"
      String prefix = null;
      String query = "";
      for (String arg : args) {
        if ("--author".equals(arg)) {
          prefix = "inauthor:";
        } else if ("--isbn".equals(arg)) {
          prefix = "isbn:";
        } else if ("--title".equals(arg)) {
          prefix = "intitle:";
        } else if (arg.startsWith("--")) {
          System.err.println("Unknown argument: " + arg);
          System.exit(1);
        } else {
          query = arg;
        }
      }
            if (prefix != null) {
                query = prefix + query;
            }
                try {
                    System.out.println(query);
                    queryGoogleBooks(jsonFactory, query);
                    TxtBName.setText(Title);                    
                    if (fauthor != null && !fauthor.isEmpty()) {
                        for (int i = 0; i < fauthor.size(); ++i) {
                            TxtAuthor.setText(fauthor.get(i));
                            if (i < fauthor.size() - 1) {
                                  TxtAuthor.setText(", ");
                            }
                        }
                    }
                    if(pub.contains("'")||pub.contains("\""))
                        pub=pub.replaceAll("'", "");
                    if(pub.startsWith("\"")){
                        TxtPublisher.setText(pub.substring(1, pub.length()-1));
                        System.out.println(pub.substring(1, pub.length()-1));
                    }
                    else
                        TxtPublisher.setText(pub);
                    String cpurl="https://books.google.com/books?id="+gbid+"&printsec=frontcover&img=1&zoom=0&source=gbs_api";
                    TxtCURL.setText(gbid);
                    URL url= new URL(cpurl); 
                    URLConnection urlConn = url.openConnection(); 
                    urlConn.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 5.21; Mac_PowerPC)" ); 
                    urlConn.connect(); 
                    InputStream urlStream = urlConn.getInputStream(); 
                    BufferedImage b = ImageIO.read(urlStream);
                    newImage = new BufferedImage(192, 235, BufferedImage.TYPE_INT_RGB);
                    Graphics g = newImage.createGraphics();
                    g.drawImage(b, 0, 0, 192, 235, null);
                    g.dispose();                    
                    ImageIcon ic = new ImageIcon(newImage);
                    cimg.setIcon(ic);
                    System.out.println("image: ");
                  // Success!
                    return;
                } catch (IOException e) {
                    System.err.println(e.getMessage());
                }
            } catch (Throwable t) {
                    t.printStackTrace();
           }
    }//GEN-LAST:event_ButtonFetchActionPerformed
    private static final String APPLICATION_NAME = "BooksSampl";
    private static final NumberFormat CURRENCY_FORMATTER = NumberFormat.getCurrencyInstance();
    private static final NumberFormat PERCENT_FORMATTER = NumberFormat.getPercentInstance();
    private static void queryGoogleBooks(JsonFactory jsonFactory, String query) throws Exception {
        ClientCredentials.errorIfNotSpecified();
        // Set up Books client.
        final Books books = new Books.Builder(GoogleNetHttpTransport.newTrustedTransport(), jsonFactory, null)
            .setApplicationName(APPLICATION_NAME)
            .setGoogleClientRequestInitializer(new BooksRequestInitializer(ClientCredentials.API_KEY))
            .build();
        // Set query string and filter only Google eBooks.
        System.out.println("Query: [" + query + "]");
        List volumesList = books.volumes().list(query);
        //volumesList.setFilter("ebooks");
        // Execute the query.
        Volumes volumes = volumesList.execute();
        if (volumes.getTotalItems() == 0 || volumes.getItems() == null) {
            JOptionPane.showMessageDialog(null,"No matches found.");
            return;
        }
        // Output results.
        for (Volume volume : volumes.getItems()) {
            Volume.VolumeInfo volumeInfo = volume.getVolumeInfo();
            Volume.SaleInfo saleInfo = volume.getSaleInfo();
            Title=volumeInfo.getTitle();
            fauthor=volumeInfo.getAuthors();
            pub=volumeInfo.getPublisher();
            gbid=volume.getId();
            System.out.println(volumeInfo.getImageLinks());
        }
  }
    /**
     * @param args the command line arguments
     */
    static int bookid;
    public static void main(String args[]) throws SQLException {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(insert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new insert().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnHome3;
    private javax.swing.JButton BtnUrlChooser;
    private javax.swing.JButton ButtonFetch;
    private javax.swing.JFrame FrameFC;
    private javax.swing.JMenuItem NewMBtnExit;
    private javax.swing.JTextField TxtAuthor;
    private javax.swing.JTextField TxtBID;
    private javax.swing.JTextField TxtBName;
    private static javax.swing.JComboBox TxtBtype;
    private javax.swing.JTextField TxtCURL;
    private javax.swing.JTextField TxtCopies;
    private javax.swing.JTextField TxtISBN;
    private javax.swing.JTextField TxtPublisher;
    private javax.swing.JLabel cimg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar4;
    private javax.swing.JFileChooser jfc;
    // End of variables declaration//GEN-END:variables
}
